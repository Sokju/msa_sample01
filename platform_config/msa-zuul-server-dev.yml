server:
  port: 9090

spring:  
  application:
    name: msa-zuul-server
  sleuth:
    sampler:
      probability: 0.1    #얼마나 많은 비율로 zipkin에 송신하는 transaction 비율(Default 0.1(10%), 설정 1.0(100%))
  zipkin:
    base-url: http://msa-zipkin-server:9411 #ZipKin Server      
  servlet:
    multipart:
      max-file-size: 128MB
      max-request-size: 128MB     
    
security:
  oauth2:
    resource:
      userInfoUri: http://msa-auth-server:9080/user
      jwt:
        key-value: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt4w9qdhOB0+J2zhUG6AE
          uyr1vEUHSATWwKpwQ5xc0+7rPCLXibjbCAO+AWbA/JHZ29XTIerdufDJEdux+JJc
          phljNXWz/FGuMSdU9EzsBVimMbthYwVrlmj1iaSsNfR4Vl1qA6WqACmjsjEoPEcE
          75AefArOF0LLKJ3jsDs/MJ4t+bd2F3so3IWE1FtOhBGUWWfgnIXpfpj1i+FCEcQt
          41R6YH8hvyJHRh4pW3gcz5uIPvZT3l/4MRGr9LNDpoq2nIxvynnLl/KsTgnm+6Lm
          V1G4DsdbPCxSR4ywKkiSp+5z69pF4DFbNqesUNpJtwqXTb2QEkiQSnx9UaDkZT23
          SwIDAQAB
          -----END PUBLIC KEY-----        
    client:
      accessTokenUri: http://msa-auth-server:9080/oauth/token
      userAuthorizationUri: http://msa-auth-server:9080/oauth/authorize
      clientId: testoauth2
      clientSecret: testoauth2      
          
#Eureka Client   
eureka:
  instance:
    prefer-ip-address: true         #HostName이 IP 에 의존하여 설정
  client:
    registerWithEureka: true       #자체 서비스를 eureka 서버에 등록 할지 여부
    fetchRegistry: true            #client 서비스가 eureka 서버로 부터 서비스 리스트 정보를 local에 caching 할지 여부
    region: default
    registryFetchIntervalSeconds: 5
    serviceUrl:
      defaultZone: http://msa-eureka-server:8761/eureka/
            
#Zuul Routing    
zuul:
  ignored-service: "*"            #zuul의 라우팅 목록을 제외하고는 ignore
  #prefix: /api                   #Zuul에 의해 routing 되는 모든 service의 Endpoint를 /api/~ 로 조합
  ignore-security-headers: false  #spring security를 쓰고 시큐리티헤더를 통과
  routes:
    msa-svc-member:               #routing id
      path: /v1/member/**         #zuul context root
      sensitiveHeaders: Cookie,Set-Cookie
      serviceId: msa-svc-member   #spring application name
      stripPrefix: false  
    msa-svc-order: 
      path: /v1/order/**  
      sensitiveHeaders: Cookie,Set-Cookie
      serviceId: msa-svc-order   
      stripPrefix: false  
    auth-server:
      path: /oauth/**
      sensitiveHeaders: Cookie,Set-Cookie
      serviceId: msa-auth-server
      stripPrefix: false  
    msa-svc-member2:               #routing id
      path: /v1/member2/**         #zuul context root
      sensitiveHeaders: Cookie,Set-Cookie
      serviceId: msa-svc-member   #spring application name
      stripPrefix: false  
      

# 타임아웃 설정   
  host:
    connect-timeout-millis: 5000
    socket-timeout-millis: 5000
    max-total-connections: 200
    max-per-route-connections: 20
    
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: THREAD
        timeout: enabled
      isolation:
        thread:
          timeoutInMilliseconds: 30000  #Hystrix 가 적용된 메서드의 타임아웃 지정 (default : 1000)
      fallback:
        enabled: true #(default : true)
      circuitBreaker:
        enabled: true #(default : true)
        requestVolumeThreshold: 5 #서킷 브레이커가 열리기 위한 최소 요청 조건(default : 20)
        sleepWindowInMilliseconds : 5000 #서킷 브레이커가 열렸을때 얼마나 지속될지 설정(default : 5000)
        errorThresholdPercentage: 50 #서킷 브레이커가 발동할 에러 퍼센트 지정(default : 50)
      metrics:
        rollingStats:
          timeInMilliseconds: 30000 #서킷 브레이커가 열리기 위한 조건 체크 시간, 기본값은 10초(default : 10000)
  threadpool:
    default:
      coreSize: 2      #Thread 를 이용할 경우 core size를 지정하는 속성(default : 10)
      maximumSize: 2   #Prior to 1.5.9, core and maximum sizes were always equal.
          
          
ribbon:
   ConnectTimeout: 5000    # Client에서 서버로 요청시 서버와의 Connection 맺기 까지의 delay time
   ReadTimeout: 30000       # Connection 맺은 후 response 받기 까지 delay time

#turbine 수집을 위한 endpoint 활성화  
management:
  endpoint:
    refresh:
      enabled: true
    restart:
      enabled: true
    health:
      enabled: true
    hystrix:
      stream:
        enabled: true
  endpoints:
    web:
      exposure:
        include: "*"           
#  endpoints:
#    enabled-by-default: false
#    web:
#      exposure:
#        include: ["health", "hystrix.stream"]      
        